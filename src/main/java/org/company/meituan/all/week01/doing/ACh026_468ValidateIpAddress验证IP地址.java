package org.company.meituan.all.week01.doing;

/**
 * <p>468. 验证IP地址
 *
 * <p>编写一个函数来验证输入的字符串是否是有效的 IPv4 或 IPv6 地址。
 *
 * <p>    如果是有效的 IPv4 地址，返回 "IPv4" ；
 * <p>    如果是有效的 IPv6 地址，返回 "IPv6" ；
 * <p>    如果不是上述类型的 IP 地址，返回 "Neither" 。
 *
 * <p>IPv4 地址由十进制数和点来表示，每个地址包含 4 个十进制数，其范围为 0 - 255， 用(".")分割。比如，172.16.254.1；
 *
 * <p>同时，IPv4 地址内的数不会以 0 开头。比如，地址 172.16.254.01 是不合法的。
 *
 * <p>IPv6 地址由 8 组 16 进制的数字来表示，每组表示 16 比特。这些组数字通过 (":")分割。比如,  2001:0db8:85a3:0000:0000:8a2e:0370:7334
 * 是一个有效的地址。而且，我们可以加入一些以 0 开头的数字，字母可以使用大写，也可以是小写。所以， 2001:db8:85a3:0:0:8A2E:0370:7334 也是一个有效的 IPv6 address地址 (即，忽略 0
 * 开头，忽略大小写)。
 *
 * <p>然而，我们不能因为某个组的值为 0，而使用一个空的组，以至于出现 (::) 的情况。 比如， 2001:0db8:85a3::8A2E:0370:7334 是无效的 IPv6 地址。
 *
 * <p>同时，在 IPv6 地址中，多余的 0 也是不被允许的。比如， 02001:0db8:85a3:0000:0000:8a2e:0370:7334 是无效的。
 *
 *
 *
 * <p>示例 1：
 *
 * <p>输入：IP = "172.16.254.1"
 * <p>输出："IPv4"
 * <p>解释：有效的 IPv4 地址，返回 "IPv4"
 *
 * <p>示例 2：
 *
 * <p>输入：IP = "2001:0db8:85a3:0:0:8A2E:0370:7334"
 * <p>输出："IPv6"
 * <p>解释：有效的 IPv6 地址，返回 "IPv6"
 *
 * <p>示例 3：
 *
 * <p>输入：IP = "256.256.256.256"
 * <p>输出："Neither"
 * <p>解释：既不是 IPv4 地址，又不是 IPv6 地址
 *
 * <p>示例 4：
 *
 * <p>输入：IP = "2001:0db8:85a3:0:0:8A2E:0370:7334:"
 * <p>输出："Neither"
 *
 * <p>示例 5：
 *
 * <p>输入：IP = "1e1.4.5.6"
 * <p>输出："Neither"
 *
 *
 *
 * <p>提示：
 *
 * <p>    IP 仅由英文字母，数字，字符 '.' 和 ':' 组成。
 *
 * <p>通过次数19,047
 * <p>提交次数78,968
 * <p>请问您在哪类招聘中遇到此题？
 * <p>https://leetcode-cn.com/problems/validate-ip-address/
 * <p>@author: wangrui
 * <p>@date: 2021/5/10
 */
public class ACh026_468ValidateIpAddress验证IP地址 {

  public String validIPAddress(String IP) {
    return null;
  }
}
